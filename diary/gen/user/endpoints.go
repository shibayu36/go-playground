// Code generated by goa v3.11.3, DO NOT EDIT.
//
// user endpoints
//
// Command:
// $ goa gen github.com/shibayu36/go-playground/diary/design

package user

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "user" service endpoints.
type Endpoints struct {
	Signup goa.Endpoint
}

// NewEndpoints wraps the methods of the "user" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Signup: NewSignupEndpoint(s),
	}
}

// Use applies the given middleware to all the "user" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Signup = m(e.Signup)
}

// NewSignupEndpoint returns an endpoint function that calls the method
// "signup" of service "user".
func NewSignupEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SignupPayload)
		return nil, s.Signup(ctx, p)
	}
}
