// Code generated by goa v3.11.3, DO NOT EDIT.
//
// diary HTTP server types
//
// Command:
// $ goa gen github.com/shibayu36/go-playground/diary/design

package server

import (
	diary "github.com/shibayu36/go-playground/diary/gen/diary"
	goa "goa.design/goa/v3/pkg"
)

// UserSignupRequestBody is the type of the "diary" service "UserSignup"
// endpoint HTTP request body.
type UserSignupRequestBody struct {
	// User name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// User email
	Email *string `form:"email,omitempty" json:"email,omitempty" xml:"email,omitempty"`
}

// NewUserSignupPayload builds a diary service UserSignup endpoint payload.
func NewUserSignupPayload(body *UserSignupRequestBody) *diary.UserSignupPayload {
	v := &diary.UserSignupPayload{
		Name:  *body.Name,
		Email: *body.Email,
	}

	return v
}

// ValidateUserSignupRequestBody runs the validations defined on
// UserSignupRequestBody
func ValidateUserSignupRequestBody(body *UserSignupRequestBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Email == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("email", "body"))
	}
	return
}
